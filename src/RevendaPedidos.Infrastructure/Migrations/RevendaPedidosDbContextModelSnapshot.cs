// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace RevendaPedidos.Infrastructure.Migrations
{
    [DbContext(typeof(RevendaPedidosDbContext))]
    partial class RevendaPedidosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RevendaPedidos.Domain.Entities.ItemPedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PedidoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProdutoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ProdutoNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PedidoId");

                    b.ToTable("ItensPedido");
                });

            modelBuilder.Entity("RevendaPedidos.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RevendaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("RevendaPedidos.Domain.Entities.Revenda", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Revendas");
                });

            modelBuilder.Entity("RevendaPedidos.Domain.Entities.ItemPedido", b =>
                {
                    b.HasOne("RevendaPedidos.Domain.Entities.Pedido", null)
                        .WithMany("_itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RevendaPedidos.Domain.Entities.Pedido", b =>
                {
                    b.OwnsOne("RevendaPedidos.Domain.Entities.ClienteFinal", "ClienteFinal", b1 =>
                        {
                            b1.Property<Guid>("PedidoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Documento")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Nome")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PedidoId");

                            b1.ToTable("Pedidos");

                            b1.WithOwner()
                                .HasForeignKey("PedidoId");
                        });

                    b.Navigation("ClienteFinal")
                        .IsRequired();
                });

            modelBuilder.Entity("RevendaPedidos.Domain.Entities.Revenda", b =>
                {
                    b.OwnsMany("RevendaPedidos.Domain.Entities.Contato", "_contatos", b1 =>
                        {
                            b1.Property<Guid>("RevendaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Nome")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<bool>("Principal")
                                .HasColumnType("bit");

                            b1.HasKey("RevendaId", "Nome");

                            b1.ToTable("Contato");

                            b1.WithOwner()
                                .HasForeignKey("RevendaId");
                        });

                    b.OwnsMany("RevendaPedidos.Domain.Entities.EnderecoEntrega", "_enderecosEntrega", b1 =>
                        {
                            b1.Property<Guid>("RevendaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Nome")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Complemento")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Numero")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Rua")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RevendaId", "Nome");

                            b1.ToTable("EnderecoEntrega");

                            b1.WithOwner()
                                .HasForeignKey("RevendaId");
                        });

                    b.OwnsMany("RevendaPedidos.Domain.Entities.Telefone", "_telefones", b1 =>
                        {
                            b1.Property<Guid>("RevendaId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Numero")
                                .HasColumnType("nvarchar(450)");

                            b1.HasKey("RevendaId", "Numero");

                            b1.ToTable("Telefone");

                            b1.WithOwner()
                                .HasForeignKey("RevendaId");
                        });

                    b.Navigation("_contatos");

                    b.Navigation("_enderecosEntrega");

                    b.Navigation("_telefones");
                });

            modelBuilder.Entity("RevendaPedidos.Domain.Entities.Pedido", b =>
                {
                    b.Navigation("_itens");
                });
#pragma warning restore 612, 618
        }
    }
}
